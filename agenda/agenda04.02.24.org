* Homework will be assigned on Wednesday, due a week from Wednesday
* Start reading on Page 60
**** Bill, run src/1. getting_started/4.1.textures/
**** The part where the author shows mixing the vertex's color with the sampled texture's color
isn't all that interesting, other than to demonstrate the amount of flexilibilty in using shaders.
In preshader code, this notion of mixing colors would have to be 1) thought of ahead of time
by the creator's of the graphics drivers 2) listed as an option that we would configure.  There
are too many ways that a programmer might want to color a fragment, so by using shader programs,
we gain a ton of flexibility, at the expense of more convoluted code that pre-shader OpenGL.
**** Texture Units
The idea here is that you can bind multiple textures at once. I've never used this and
find it uninteresting, just be aware it exists.
** Chapter 8, Transformations
This is some review from earlier in the class, but we will cover the math notation
the author uses.
Need to know vector addditon, subtraction, magnitudes.  Also multiplying a scalar by a vector
*** Vector-vector multiplication
Muliiplication by vectors is defined in geometric algebra, composed of a dot product and cross
product in 3D, but the author appears to be unaware, but that's fine.

**** Knowing the dot product is very important
***** Know two things - how to do the calculations, and then also the properties, in particular that we can get the cosine of the angle between the vectors by taking the dot product of the vectors, and then dividing by the magnitudes of the two input vectors.
If we know the cosine is 0, then the vectors are perpendicular.
**** Knowing the cross product is very important
***** I have a proof of the cross product if anyone is interested
***** Bill, show your cross product demo in python
***** Know the formula, and the properties.  1) the resulting vector is perpendicular to both input vectors. 2) The magnitude is equal to the sine between the two vectors times their magnitudes.
*** Matricies
**** Don't worry about matrix addition and subtraction
**** Matrix-scalar products - the scalar could be turned into a uniform scaling matrix, to stretch the columns of the other matrix by a constant amount
**** Matrix-vector multiplication
This is the main operation we need to know about.  A matrix M, multiplied by vector v, is the main operation that we have focused on earlier in the class, although I didn't call it out at the time.
I like to think of a matrix as a function to do some transformation.  So a rotation matrix R times vector v will change the coordinates, much like we did earlier in the class
